% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/score_bayesian.R
\name{score_bayesian}
\alias{score_bayesian}
\title{Computing Model Scores as Posterior Probabilities using Bayesian Inference}
\usage{
score_bayesian(m, sigma = NULL, multiplier = 1)
}
\arguments{
\item{m}{A Matrix of values. The first column of the matrix should be
a vector of observed data for a give variable. Subsequent vectors should be
representative of modeled values for a given variable.}

\item{sigma}{Numeric value (optional). The standard deviation parameter for
the normal distribution used in the likelihood function. If not provided, the
function will automatically computed as the standard deviation observed data.}

\item{multiplier}{Numeric value (optional). A multiplier that can be applied
to adjust the value of `sigma`. If not provided, `sigma` will be calculated
based on one standard deviation of the observed data. Applying a `multiplier`
will increase (`multiplier` > 1) or decrease (`multiplier` < 1) the units of
standard deviation applied to scoring.}
}
\value{
Returns a vector of scores with a length equal to the number of
model iterations in the input matrix. Or, if the input matrix has K columns,
the return vector will = K - 1.
}
\description{
This function uses observed data to compute scores that represent
how well modeled values reflect what is occurring in reality. To do this, the
function uses root mean square error (RMSE) values to compute the likelihood
of observing modeled values given observed values, assuming normal distribution
of errors. Likelihood values are used to compute posterior probabilities which
are used as scores for each model iteration.
}
\note{
Note: In Bayesian statistics, the choice of `sigma` can significantly
impact the results and conclusions of the analysis. Users are encouraged to
experiment with different values and understand the implications for their
specific use case.
}
\examples{
# creating sample matrix
mat <- matrix(data = 1:15, nrow = 5, ncol = 3)

# scoring to two units of standard deviation
score_bayesian(mat, multiplier = 2)
}
